{"ast":null,"code":"import Bot from \"./apiBotTube\";\n\nconst puppeteer = async name => {\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  console.log(\"CARCA\", name);\n\n  if (!sessionStorage.getItem(\"@botData\")) {\n    sessionStorage.setItem(\"@botData\", JSON.stringify([]));\n  }\n\n  const session = sessionStorage.getItem(\"@botData\");\n  await delay(3000);\n  const find = await Bot.find(name);\n  const data = {\n    url: find[0].url,\n    error: false,\n    embed: true,\n    name: find[0].title,\n    imgUrl: find[0].img\n  };\n  const array = [];\n\n  if (JSON.parse(session).length == 0) {\n    array.push(data);\n    sessionStorage.setItem(\"@botData\", JSON.stringify(array));\n  } else {\n    for (let i = 0; i < JSON.parse(session).length; i++) {\n      array.push(JSON.parse(session)[i]);\n    }\n\n    array.push(data);\n    const values = array.filter(function (a) {\n      return !this[JSON.stringify(a)] && (this[JSON.stringify(a)] = true);\n    }, Object.create(null));\n\n    if (values.length > 5) {\n      values.shift();\n    }\n\n    sessionStorage.setItem(\"@botData\", JSON.stringify(values));\n  }\n\n  return data;\n};\n\nexport default puppeteer;","map":{"version":3,"sources":["/home/php/pjpessoal/react-hook/form-pessoal/src/services/puppeteer.js"],"names":["Bot","puppeteer","name","delay","ms","Promise","resolve","setTimeout","console","log","sessionStorage","getItem","setItem","JSON","stringify","session","find","data","url","error","embed","title","imgUrl","img","array","parse","length","push","i","values","filter","a","Object","create","shift"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAOC,IAAP,IAAc;AAC5B,QAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AACJI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,IAArB;;AACI,MAAI,CAACQ,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAL,EAAyC;AACrCD,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAnC;AACD;;AACH,QAAMC,OAAO,GAAGL,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACA,QAAMR,KAAK,CAAC,IAAD,CAAX;AAGA,QAAMa,IAAI,GAAG,MAAMhB,GAAG,CAACgB,IAAJ,CAASd,IAAT,CAAnB;AAEA,QAAMe,IAAI,GAAG;AACTC,IAAAA,GAAG,EAACF,IAAI,CAAC,CAAD,CAAJ,CAAQE,GADH;AAETC,IAAAA,KAAK,EAAE,KAFE;AAGTC,IAAAA,KAAK,EAAE,IAHE;AAITlB,IAAAA,IAAI,EAAEc,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAJL;AAKTC,IAAAA,MAAM,EAACN,IAAI,CAAC,CAAD,CAAJ,CAAQO;AALN,GAAb;AAQA,QAAMC,KAAK,GAAG,EAAd;;AACA,MAAGX,IAAI,CAACY,KAAL,CAAWV,OAAX,EAAoBW,MAApB,IAA8B,CAAjC,EAAmC;AAC/BF,IAAAA,KAAK,CAACG,IAAN,CAAWV,IAAX;AACAP,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAvB,EAAkCC,IAAI,CAACC,SAAL,CAAeU,KAAf,CAAlC;AACH,GAHD,MAGK;AAEG,SAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACf,IAAI,CAACY,KAAL,CAAWV,OAAX,EAAoBW,MAAnC,EAA2CE,CAAC,EAA5C,EAAgD;AAChDJ,MAAAA,KAAK,CAACG,IAAN,CAAWd,IAAI,CAACY,KAAL,CAAWV,OAAX,EAAoBa,CAApB,CAAX;AAEH;;AAEDJ,IAAAA,KAAK,CAACG,IAAN,CAAWV,IAAX;AAEA,UAAMY,MAAM,GAAGL,KAAK,CAACM,MAAN,CAAa,UAAUC,CAAV,EAAa;AACrC,aAAO,CAAC,KAAKlB,IAAI,CAACC,SAAL,CAAeiB,CAAf,CAAL,CAAD,KAA6B,KAAKlB,IAAI,CAACC,SAAL,CAAeiB,CAAf,CAAL,IAA0B,IAAvD,CAAP;AACH,KAFc,EAEZC,MAAM,CAACC,MAAP,CAAc,IAAd,CAFY,CAAf;;AAGA,QAAGJ,MAAM,CAACH,MAAP,GAAgB,CAAnB,EAAqB;AACjBG,MAAAA,MAAM,CAACK,KAAP;AACH;;AAGDxB,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAvB,EAAkCC,IAAI,CAACC,SAAL,CAAee,MAAf,CAAlC;AACH;;AAGD,SAAOZ,IAAP;AACH,CA9CD;;AAgDA,eAAehB,SAAf","sourcesContent":["import Bot from \"./apiBotTube\";\n\nconst puppeteer = async (name)=>{\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms))\nconsole.log(\"CARCA\", name);\n    if (!sessionStorage.getItem(\"@botData\")) {\n        sessionStorage.setItem(\"@botData\", JSON.stringify([]));\n      }\n    const session = sessionStorage.getItem(\"@botData\")\n    await delay(3000)\n    \n    \n    const find = await Bot.find(name)\n\n    const data = {\n        url:find[0].url,\n        error: false,\n        embed: true,\n        name: find[0].title,\n        imgUrl:find[0].img\n    }\n\n    const array = [];\n    if(JSON.parse(session).length == 0){\n        array.push(data)\n        sessionStorage.setItem(\"@botData\",JSON.stringify(array))\n    }else{\n\n            for(let i=0; i<JSON.parse(session).length; i++ ){\n            array.push(JSON.parse(session)[i])\n            \n        }\n        \n        array.push(data)\n        \n        const values = array.filter(function (a) {\n            return !this[JSON.stringify(a)] && (this[JSON.stringify(a)] = true);\n        }, Object.create(null))\n        if(values.length > 5){\n            values.shift();\n        }\n        \n                \n        sessionStorage.setItem(\"@botData\",JSON.stringify(values))\n    }\n\n   \n    return data;\n}\n\nexport default puppeteer;"]},"metadata":{},"sourceType":"module"}